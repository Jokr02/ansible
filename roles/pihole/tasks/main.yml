---
# 1) Basisverzeichnisse
- name: Ensure containers_root exists
  ansible.builtin.file:
    path: "{{ containers_root | default('/opt/containers') }}"
    state: directory
    mode: "0755"

- name: Create Pi-hole directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ containers_root | default('/opt/containers') }}/pihole"
    - "{{ containers_root | default('/opt/containers') }}/pihole/etc-pihole"
    - "{{ containers_root | default('/opt/containers') }}/pihole/etc-dnsmasq.d"
    - "{{ containers_root | default('/opt/containers') }}/pihole/unbound"

# 2) docker-compose.yml aus Template rendern
- name: Render docker-compose.yml for Pi-hole
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ containers_root | default('/opt/containers') }}/pihole/docker-compose.yml"
    mode: "0644"

# 3) Compose-Projekt idempotent deployen (pull + up)
- name: Deploy/Update Pi-hole stack
  community.docker.docker_compose_v2:
    project_src: "{{ containers_root | default('/opt/containers') }}/pihole"
    pull: true
    state: present

---
# 1) Basisverzeichnisse
- name: Ensure containers_root exists
  ansible.builtin.file:
    path: "{{ containers_root | default('/opt/containers') }}"
    state: directory
    mode: "0755"

- name: Create Pi-hole directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  loop:
    - "{{ containers_root | default('/opt/containers') }}/pihole"
    - "{{ containers_root | default('/opt/containers') }}/pihole/etc-pihole"
    - "{{ containers_root | default('/opt/containers') }}/pihole/etc-dnsmasq.d"

# 2) docker-compose.yml schreiben (ohne 'command' bei unbound)
- name: Deploy Pi-hole docker-compose.yml
  ansible.builtin.copy:
    dest: "{{ containers_root | default('/opt/containers') }}/pihole/docker-compose.yml"
    mode: "0644"
    content: |
      version: "3.9"

      services:
        pihole:
          image: pihole/pihole:latest
          container_name: pihole
          restart: unless-stopped
          network_mode: host
          environment:
            TZ: "{{ timezone }}"
            WEBPASSWORD: "{{ pihole_webpassword }}"
            DNSMASQ_USER: "root"
            FTLCONF_LOCAL_IPV4: "{{ pihole_ip }}"
            PIHOLE_DNS_: "{{ pihole_dns_1 }};{{ pihole_dns_2 }}{% if use_unbound %};127.0.0.1#5335{% endif %}"
          volumes:
            - ./etc-pihole:/etc/pihole
            - ./etc-dnsmasq.d:/etc/dnsmasq.d
          cap_add:
            - NET_ADMIN
{% if use_unbound %}
        unbound:
          image: mvance/unbound:latest
          container_name: unbound
          restart: unless-stopped
          network_mode: host
          volumes:
            - ./unbound:/opt/unbound/etc/unbound
{% endif %}



# 3) Compose starten (alternativ: community.docker.docker_compose_v2 Modul)
- name: Pull latest images
  ansible.builtin.shell: docker compose pull
  args:
    chdir: "{{ containers_root | default('/opt/containers') }}/pihole"

- name: Bring up Pi-hole stack
  ansible.builtin.shell: docker compose up -d
  args:
    chdir: "{{ containers_root | default('/opt/containers') }}/pihole"

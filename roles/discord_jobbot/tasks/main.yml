---
- name: Install required system packages
  apt:
    name:
      - python3
      - python3-pip
      - python3-venv
      - git
      - libjpeg-dev
      - build-essential
    update_cache: yes

- name: Ensure application directory exists
  file:
    path: "{{ app_dir }}"
    state: directory
    mode: '0755'

- name: Clone Discord JobBot repository
  git:
    repo: "{{ repo_url }}"
    dest: "{{ app_dir }}"
    version: main
    force: yes

- name: Create Python virtual environment using python3-venv
  command: python3 -m venv {{ app_dir }}/venv
  args:
    creates: "{{ app_dir }}/venv"

- name: Install Python requirements in virtualenv
  pip:
    requirements: "{{ app_dir }}/requirements.txt"
    executable: "{{ app_dir }}/venv/bin/pip"

- name: Render .env file from template
  template:
    src: env.j2
    dest: "{{ app_dir }}/.env"
    mode: '0600'

- name: Create start script
  copy:
    dest: "{{ app_dir }}/start.sh"
    mode: '0755'
    content: |
      #!/bin/bash
      cd "{{ app_dir }}"
      source venv/bin/activate
      python3 bot.py

- name: Install systemd service for Discord Bot
  copy:
    dest: /etc/systemd/system/discord-jobbot.service
    mode: '0644'
    content: |
      [Unit]
      Description=Discord JobBot Service
      After=network.target

      [Service]
      Type=simple
      WorkingDirectory={{ app_dir }}
      ExecStart={{ app_dir }}/venv/bin/python3 {{ app_dir }}/bot.py
      EnvironmentFile={{ app_dir }}/.env
      Restart=always
      User=root

      [Install]
      WantedBy=multi-user.target

- name: Reload systemd and enable the bot service
  systemd:
    daemon_reload: yes
    name: discord-jobbot
    enabled: yes
    state: started
- name: Gather RAM info
  command: free -h
  register: ram_info

- name: Get systemctl status summary of the JobBot
  command: systemctl show -p ActiveState,SubState discord-jobbot
  register: service_status

- name: Get hostname
  command: hostname
  register: host_name

- name: Send extended Healthcheck webhook to Discord
  uri:
    url: "{{ ERROR_WEBHOOK_URL }}"
    method: POST
    headers:
      Content-Type: "application/json"
    body_format: json
    body:
      content: |
        ✅ **Discord JobBot erfolgreich deployed und gestartet**
        🖥 Host: {{ host_name.stdout }}
        🔁 Service-Status: {{ service_status.stdout | regex_replace('\n', ', ') }}
        💾 RAM:
        ```
{{ ram_info.stdout }}
        ```
        📁 Arbeitsverzeichnis: {{ app_dir }}
  when: ERROR_WEBHOOK_URL | length > 0

- name: Evaluate if JobBot systemd service is unhealthy
  set_fact:
    jobbot_unhealthy: "{{ 'inactive' in service_status.stdout or 'failed' in service_status.stdout or 'deactivating' in service_status.stdout }}"

- name: Send ALERT webhook if JobBot service is unhealthy
  uri:
    url: "{{ ERROR_WEBHOOK_URL }}"
    method: POST
    headers:
      Content-Type: "application/json"
    body_format: json
    body:
      content: |
        🚨 **Achtung: Discord JobBot läuft NICHT korrekt!**
        🖥 Host: {{ host_name.stdout }}
        ❌ Status: {{ service_status.stdout | regex_replace('\n', ', ') }}
        💡 Bitte prüfe mit:
        ```
        journalctl -u discord-jobbot
        systemctl status discord-jobbot
        ```
  when:
    - ERROR_WEBHOOK_URL | length > 0
    - jobbot_unhealthy
